# Copyright 2025 Nitro Agility S.r.l.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# SPDX-License-Identifier: Apache-2.0

name: Permguard Release

on:
  push:
    tags:
      - "*"           # release solo sui tag
  pull_request:        # sui PR fai solo build snapshot

permissions:
  contents: write
  id-token: write
  packages: write
  attestations: write

jobs:
  # --- Build for Linux, Windows, and Docker ---
  build_linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: stable
      - uses: docker/setup-qemu-action@v3
      - uses: docker/setup-buildx-action@v3
      - uses: sigstore/cosign-installer@v3.10.0
      - uses: anchore/sbom-action/download-syft@v0.20.6

      - name: Log in to Docker Hub
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Log in to GHCR
        if: startsWith(github.ref, 'refs/tags/')
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: GoReleaser (snapshot PR - linux)
        if: github.event_name == 'pull_request'
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser-pro
          version: latest
          args: release --clean --snapshot --config .goreleaser-pro.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}

      - name: GoReleaser (split linux+windows+docker)
        if: startsWith(github.ref, 'refs/tags/')
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser-pro
          version: latest
          args: release --clean --split --config .goreleaser-pro.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          DOCKER_BUILDKIT: "1"

  # --- Build for macOS (sign & notarize) ---
  build_macos:
    runs-on: macos-latest
    needs: [build_linux]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/setup-go@v5
        with:
          go-version: stable

      - name: GoReleaser (snapshot PR - mac)
        if: github.event_name == 'pull_request'
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser-pro
          version: latest
          args: release --clean --snapshot --config .goreleaser-mac-pro.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          MACOS_SIGN_P12: ${{ secrets.MACOS_SIGN_P12 }}
          MACOS_SIGN_PASSWORD: ${{ secrets.MACOS_SIGN_PASSWORD }}
          MACOS_NOTARY_ISSUER_ID: ${{ secrets.MACOS_NOTARY_ISSUER_ID }}
          MACOS_NOTARY_KEY_ID: ${{ secrets.MACOS_NOTARY_KEY_ID }}
          MACOS_NOTARY_KEY: ${{ secrets.MACOS_NOTARY_KEY }}

      - name: GoReleaser (split macOS notarize)
        if: startsWith(github.ref, 'refs/tags/')
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser-pro
          version: latest
          args: release --clean --split --config .goreleaser-mac-pro.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
          MACOS_SIGN_P12: ${{ secrets.MACOS_SIGN_P12 }}
          MACOS_SIGN_PASSWORD: ${{ secrets.MACOS_SIGN_PASSWORD }}
          MACOS_NOTARY_ISSUER_ID: ${{ secrets.MACOS_NOTARY_ISSUER_ID }}
          MACOS_NOTARY_KEY_ID: ${{ secrets.MACOS_NOTARY_KEY_ID }}
          MACOS_NOTARY_KEY: ${{ secrets.MACOS_NOTARY_KEY }}

  # --- Merge and publish a single unified release ---
  publish:
    runs-on: ubuntu-latest
    needs: [build_linux, build_macos]
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: GoReleaser (merge + publish)
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser-pro
          version: latest
          args: publish --merge --config .goreleaser-pro.yaml --config .goreleaser-mac-pro.yaml
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}
          GORELEASER_KEY: ${{ secrets.GORELEASER_KEY }}
